# docker-compose.yml
services:
  pg_src:
    image: postgres:15
    container_name: pg_src
    environment:
      POSTGRES_USER: olake
      POSTGRES_PASSWORD: olake
      POSTGRES_DB: source
    ports:
      - "5433:5432"
    volumes:
      - ./sql/init_source.sql:/docker-entrypoint-initdb.d/init_source.sql

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DOMAIN: minio
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    image: minio/mc
    container_name: mc
    depends_on: [minio]
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting for minio...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse || true;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    depends_on: [ minio ]
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1
      CATALOG_WAREHOUSE: s3://warehouse/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
      CATALOG_S3_PATH__STYLE__ACCESS: "true"
      CATALOG_S3_REGION: us-east-1
    ports:
      - "8181:8181"






  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    depends_on: [rest, minio]
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    ports:
      - "8888:8888"   # Jupyter
      - "8080:8080"   # Spark UI
      - "10000:10000"
      - "10001:10001"
